---
import ClientRouter from "astro/components/ClientRouter.astro";
import Sidebar from "../components/Sidebar.astro";
import Player from "../components/Player.astro";
import NavBar from "../components/NavBar.astro";
import NavBarMobile from "../components/NavBarMobile.astro";
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/logo.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>Spotify with Astro</title>
		<link rel="preconnect" href="https://fonts.googleapis.com">
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
		<link href="https://fonts.googleapis.com/css2?family=Noto+Sans:ital,wght@0,100..900;1,100..900&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap" rel="stylesheet">
		<ClientRouter />
	</head>
	<body class="h-full flex flex-col">

		<div class="flex items-center h-16 p-2">
			<NavBar />
		</div>

		<div class="flex-1 md:px-2 flex gap-2 overflow-y-auto">
			<div class="hidden md:block w-96 bg-zinc-900 h-full rounded-lg overflow-y-auto">
				<Sidebar />
			</div>
				
			<div class="flex-1 rounded-lg overflow-y-auto">
				<slot />
			</div>
		</div>

		<div class="md:mt-2 h-14 md:h-20 w-full">
			<Player />
		</div>

		<div class="mt-2 h-16 w-full md:hidden">
			<NavBarMobile />
		</div>

		<script is:inline defer>
			function setContainerColor(dataColor) {
				const playlistContainer = document.getElementById("playlist-container");
				const currentColor = playlistContainer?.getAttribute("data-color");
				if (dataColor && dataColor !== currentColor) {
				playlistContainer?.style.setProperty("--context-color", dataColor);
				playlistContainer?.setAttribute("data-color", dataColor);
				}
			}
	  
			window.coloradTimeout = null;
			for (const playlist of document.querySelectorAll(".playlist-item")) {
			  playlist.addEventListener("mouseover", () =>
				onMouseOverColorad(playlist)
			  );
			  playlist.addEventListener("mouseout", onMouseOutColorad);
			  playlist.addEventListener("focus", () => onMouseFocusColorad(playlist));
			  playlist.addEventListener("blur", onMouseOutColorad);
			}
	  
			function onMouseFocusColorad(el) {
			  if (el) {
				const dataColor = el.getAttribute("data-color");
				if (!dataColor) return;
				setContainerColor(dataColor);
			  }
			}
			function onMouseOverColorad(el) {
			  if (el) {
				const dataColor = el.getAttribute("data-color");
				if (!dataColor) return;
				window.coloradTimeout = setTimeout(
				  () => setContainerColor(dataColor),
				  200
				);
			  }
			}
			function onMouseOutColorad() {
			  if (window.coloradTimeout) {
				clearTimeout(window.coloradTimeout);
				window.coloradTimeout = null;
			  }
			}
		</script>
		<script>
			if (!document.startViewTransition) {
			  document.getElementById("not-support")?.classList.remove("hidden");
			}
			document.addEventListener("astro:page-load", () => {
			  for (const el of document.querySelectorAll(".el-to-fade")) {
				el.classList.remove("scale-90");
			  }
			});
		</script>
	</body>
</html>

<style>
	html {
		color: white;
		font-family: 'Noto Sans', sans-serif;
		scroll-behavior: smooth;
		height: 100%;
	}

	:root {
		--color-primary: theme(colors.green.500);
		--color-background: theme(colors.zinc.950);
		--color-foreground: theme(colors.zinc.900);
		--app-height: 100dvh;
	}

	body {
		background: var(--color-background);
		height: 100%;
		overflow: hidden; /* Evita el desplazamiento global */
	}

	* {
		scrollbar-width: none; /* Firefox */
		scrollbar-color: rgb(50, 50, 50) rgb(30, 30, 30); /* Firefox */
	}

	*::-webkit-scrollbar {
		display: none; /* Chrome, Safari, Opera */
	}

</style>
